[tool.poetry]
name="delfino-docker"
version="4.0.1"
authors = ["Radek Lat <radek.lat@gmail.com>"]
description="A delfino plugin with helper scripts for working with docker."
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/radeklat/delfino-docker"

# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.8.1"
delfino = "^3.0"
packaging = "^23.0"

[tool.poetry.plugins]

[tool.poetry.plugins."delfino.plugin"]
"delfino-docker" = "delfino_docker"

[tool.poetry.group.dev.dependencies]
types-toml = "*"
delfino-core = {extras = ["verify-all"], version = "^6.0"}
gitpython = "^3.1"

[tool.isort]
# Setting compatible with black. See https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.black]
line-length = 120
target-version = ['py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = "tests/unit tests/integration"
python_functions = "should_*"
junit_family = "xunit2"

# Structure: https://docs.pytest.org/en/stable/warnings.html
# Values:    https://docs.python.org/3/library/warnings.html#describing-warning-filters
#            action:message:category:module:line
filterwarnings = [

]

markers = [
]

[tool.mypy]
show_column_numbers = true
show_error_codes = true
color_output = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
follow_imports = "silent"

[[tool.mypy.overrides]]
# Source code dependencies
module = [
    "delfino.*",
    "delfino_core.*",
]
ignore_missing_imports = true

[tool.pydocstyle]
convention = "pep257"
match = "^(?!test_)(.*)(?<!config_parser)\\.py$"
add-ignore = [
    # See http://www.pydocstyle.org/en/stable/error_codes.html
    "D1",  # Missing docstrings. We rely on code reviews. Names are often descriptive enough and don't need additional docstring.
    "D202",  # "No blank lines allowed after function docstring" is false positive caused by black formatter.
    "D204",  # "1 blank line required after class docstring"
    "D401",  # "First line should be in imperative mood"
    "D413",  # "Missing blank line after last section"
]

[tool.delfino.plugins.delfino-core]
